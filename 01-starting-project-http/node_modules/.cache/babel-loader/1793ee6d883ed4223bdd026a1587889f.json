{"ast":null,"code":"var _jsxFileName = \"/home/atharva/Bootcamp/01-starting-project-http/src/App.js\";\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  cosnt[(movies, setMovies)] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  try {\n    const fetchMoviesHandler = async () => {\n      setIsLoading(true);\n      const response = await fetch('https://swapi.dev/api/films/');\n      const data = response.json();\n      const transformedMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openeingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovies(transformedMovies);\n      setIsLoading(false);\n    };\n  } catch (error) {}\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(MoviesList, {\n    movies: dummyMovies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/atharva/Bootcamp/01-starting-project-http/src/App.js"],"names":["React","useState","MoviesList","App","cosnt","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","response","fetch","data","json","transformedMovies","results","map","movieData","id","episode_id","title","openeingText","opening_crawl","releaseDate","release_date","dummyMovies"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACdC,EAAAA,KAAK,EAAEC,MAAM,EAAEC,SAAV,EAAL,GAA6BL,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;;AAEA,MAAI;AACH,UAAMU,kBAAkB,GAAG,YAAY;AACtCH,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,YAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAAD,CAA5B;AACA,YAAMC,IAAI,GAAGF,QAAQ,CAACG,IAAT,EAAb;AAEA,YAAMC,iBAAiB,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAkBC,SAAD,IAAe;AACzD,eAAO;AACNC,UAAAA,EAAE,EAAED,SAAS,CAACE,UADR;AAENC,UAAAA,KAAK,EAAEH,SAAS,CAACG,KAFX;AAGNC,UAAAA,YAAY,EAAEJ,SAAS,CAACK,aAHlB;AAINC,UAAAA,WAAW,EAAEN,SAAS,CAACO;AAJjB,SAAP;AAMA,OAPyB,CAA1B;AAQApB,MAAAA,SAAS,CAACU,iBAAD,CAAT;AACAR,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,KAfD;AAgBA,GAjBD,CAiBE,OAAOC,KAAP,EAAc,CAAE;;AAElB,sBACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAQ,IAAA,OAAO,EAAEE,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,CADD,eAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEgB,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAJD,CADD;AAUA;;AAED,eAAexB,GAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n\tcosnt[(movies, setMovies)] = useState([]);\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [error, setError] = useState(null);\n\n\ttry {\n\t\tconst fetchMoviesHandler = async () => {\n\t\t\tsetIsLoading(true);\n\t\t\tconst response = await fetch('https://swapi.dev/api/films/');\n\t\t\tconst data = response.json();\n\n\t\t\tconst transformedMovies = data.results.map((movieData) => {\n\t\t\t\treturn {\n\t\t\t\t\tid: movieData.episode_id,\n\t\t\t\t\ttitle: movieData.title,\n\t\t\t\t\topeneingText: movieData.opening_crawl,\n\t\t\t\t\treleaseDate: movieData.release_date,\n\t\t\t\t};\n\t\t\t});\n\t\t\tsetMovies(transformedMovies);\n\t\t\tsetIsLoading(false);\n\t\t};\n\t} catch (error) {}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<section>\n\t\t\t\t<button onClick={fetchMoviesHandler}>Fetch Movies</button>\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t<MoviesList movies={dummyMovies} />\n\t\t\t</section>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
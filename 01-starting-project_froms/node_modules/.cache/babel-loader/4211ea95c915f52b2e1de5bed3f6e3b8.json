{"ast":null,"code":"var _jsxFileName = \"/home/atharva/Bootcamp/01-starting-project_froms/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState('');\n  const [isNameValid, setIsNameValid] = useState(true);\n\n  const getNameHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    console.log(enteredName);\n\n    if (enteredName.trim() === '') {\n      setIsNameValid(false);\n    }\n\n    ;\n    setIsNameValid(true);\n    setEnteredName('');\n  };\n\n  const nameInputClasses = isNameValid ? 'from-control' : 'form-control invalid';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: getNameHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this), !isNameValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-text\",\n      children: \"Name must not be empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, this);\n};\n\n_s(SimpleInput, \"3CD6ZYqmshAc9tI1ndYgqyBxB5w=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["/home/atharva/Bootcamp/01-starting-project_froms/src/components/SimpleInput.js"],"names":["useState","SimpleInput","props","enteredName","setEnteredName","isNameValid","setIsNameValid","getNameHandler","event","target","value","formSubmissionHandler","preventDefault","console","log","trim","nameInputClasses"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,cAAP;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,IAAD,CAA9C;;AAEA,QAAMO,cAAc,GAAIC,KAAD,IAAW;AACjCJ,IAAAA,cAAc,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACA,GAFD;;AAIA,QAAMC,qBAAqB,GAAIH,KAAD,IAAW;AACxCA,IAAAA,KAAK,CAACI,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYX,WAAZ;;AAEA,QAAIA,WAAW,CAACY,IAAZ,OAAuB,EAA3B,EAA+B;AAC9BT,MAAAA,cAAc,CAAC,KAAD,CAAd;AACA;;AAAA;AAEDA,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAF,IAAAA,cAAc,CAAC,EAAD,CAAd;AACA,GAVD;;AAYA,QAAMY,gBAAgB,GAAGX,WAAW,GACjC,cADiC,GAEjC,sBAFH;AAIA,sBACC;AAAM,IAAA,QAAQ,EAAEM,qBAAhB;AAAA,4BACC;AAAK,MAAA,SAAS,EAAEK,gBAAhB;AAAA,8BACC;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AACC,QAAA,IAAI,EAAC,MADN;AAEC,QAAA,EAAE,EAAC,MAFJ;AAGC,QAAA,QAAQ,EAAET,cAHX;AAIC,QAAA,KAAK,EAAEJ;AAJR;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,EAUE,CAACE,WAAD,iBAAgB;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVlB,eAWC;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAXD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAiBA,CAzCD;;GAAMJ,W;;KAAAA,W;AA2CN,eAAeA,WAAf","sourcesContent":["import { useState } from 'react';\nimport '../index.css';\n\nconst SimpleInput = (props) => {\n\tconst [enteredName, setEnteredName] = useState('');\n\tconst [isNameValid, setIsNameValid] = useState(true);\n\n\tconst getNameHandler = (event) => {\n\t\tsetEnteredName(event.target.value);\n\t};\n\n\tconst formSubmissionHandler = (event) => {\n\t\tevent.preventDefault();\n\t\tconsole.log(enteredName);\n\n\t\tif (enteredName.trim() === '') {\n\t\t\tsetIsNameValid(false);\n\t\t};\n\n\t\tsetIsNameValid(true);\n\t\tsetEnteredName('');\n\t};\n\n\tconst nameInputClasses = isNameValid\n\t\t? 'from-control'\n\t\t: 'form-control invalid';\n\n\treturn (\n\t\t<form onSubmit={formSubmissionHandler}>\n\t\t\t<div className={nameInputClasses}>\n\t\t\t\t<label htmlFor='name'>Your Name</label>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tid='name'\n\t\t\t\t\tonChange={getNameHandler}\n\t\t\t\t\tvalue={enteredName}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t{!isNameValid && <p className='error-text'>Name must not be empty</p>}\n\t\t\t<div className='form-actions'>\n\t\t\t\t<button>Submit</button>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}